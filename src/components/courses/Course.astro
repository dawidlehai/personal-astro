---
import type { CourseType } from "../../data/courses.astro";
import type { LanguageSelectionType } from "../../utils/types";

interface Props {
  lang: LanguageSelectionType;
  data: CourseType;
}

const { lang, data: course } = Astro.props;

const text = {
  author: {
    en: ["by", course.author],
    pl: [
      "od",
      `${course.author.split(" ")[0]}a ${course.author.split(" ")[1]}a`,
    ],
  },
  platform: {
    en: "on",
    pl: "na",
  },
  length: {
    en: [course.length, "hours of video materials"],
    pl: [
      `${String(course.length).replace(".", ",")}`,
      "godzin materiałów wideo",
    ],
  },
  link: {
    en: "Check it out",
    pl: "Zobacz",
  },
};
---

<li class="course">
  <div class="course__text-container">
    <div class="course__tech-icons">
      {
        course.tech.map((tech) => (
          <div
            class="course__tech-icon-container"
            style={{ backgroundColor: tech.bg, color: tech.color }}>
            <tech.icon
              size="100%"
              title={tech.name}
              className="course__tech-icon"
            />
          </div>
        ))
      }
    </div>

    <h3 lang="en" class="course__heading">{course.title}</h3>

    <p class="course__author">
      {text.author[lang][0]}
      <strong>{text.author[lang][1]}</strong>
    </p>

    <p class="course__length">
      <strong>{text.length[lang][0]}</strong>
      {text.length[lang][1]}
    </p>
  </div>
  <a href={course.url} hreflang="en" class="button">
    <course.platform.icon.icon
      size="var(--icon-size)"
      title={course.platform.name}
      className="course__platform-icon"
    />
    {text.link[lang]}
    {text.platform[lang]}
    {course.platform.name}
  </a>
</li>

<style
  define:vars={{
    "platform-color": course.platform.icon.color,
  }}
>
  .course {
    margin-top: 2rem;
  }

  .course__text-container {
    padding: var(--space-24) var(--space-32);
    padding-top: 0;
    background-color: var(--gray-14);
    border-radius: var(--radius-default);
  }

  .course__tech-icons {
    display: flex;
    gap: var(--space-12);
  }

  .course__tech-icon-container {
    max-width: var(--space-64);
    padding: 1.4rem;
    border-radius: var(--radius-small);
    transform: translateY(-50%);
    display: flex;
  }

  .course__tech-icon {
  }

  .course__heading {
    font-size: var(--font-6);
    line-height: var(--line-snug);
    letter-spacing: var(--letter-spacing-5);
    color: var(--gray-3);
    margin-top: -2rem;
  }

  .course__author {
    margin: 0;
    margin-top: var(--space-12);
    color: var(--gray-4);
  }

  .course__length {
    margin: 0;
    color: var(--gray-5);
  }

  .button {
    --icon-size: 2.5ex;
    display: inline-block;
    background-color: var(--gray-14);
    color: var(--platform-color);
    margin-top: var(--space-12);
    border-radius: var(--radius-default);
  }
</style>
