---
import type { CollectionEntry } from "astro:content";
import { Link } from "phosphor-react";

interface Props {
  item: CollectionEntry<"research">;
}

const {
  item,
  item: {
    id,
    data: { years, title, role, link },
  },
} = Astro.props;

const { Content } = await item.render();

const lang = id.split("/")[0];
---

<li class="item">
  <p class="years">
    <time class="from" datetime={years.from}>{years.from}</time>
    {
      years.from !== years.to && (
        <>
          â€“
          <time class="to" datetime={years.to}>
            {years.to}
          </time>
        </>
      )
    }
  </p>

  <hgroup class="heading">
    <p class="role">{role}</p>

    <h3 class="title" {...(title.lang !== lang && {lang: title.lang})}>
      {title.content}
    </h3>
  </hgroup>

  <div class="description">
    <Content class="test" />
  </div>

  {
    link && (
      <a
        class="link"
        href={link.url}
        {...(link.hreflang !== lang && { lang: link.hreflang })}>
        <div class="link__icon-container">
          <Link size="100%" weight="duotone" className="link__icon" />
        </div>
        <span>Zobacz {link.text.split(" ")[0]}</span>
        <span>{link.text.slice(link.text.indexOf(" "))}</span>
      </a>
    )
  }
</li>

<style>
  .item {
    flex: 1 1 auto;
    padding: var(--space-32);
    padding-bottom: var(--space-24);
    background-color: hsl(var(--b) 90%);
    position: relative;
    overflow: hidden;
    clip-path: polygon(
      calc(100% - var(--space-80)) 0,
      100% calc(var(--space-80)),
      100% calc(100% + 1px),
      0 calc(100% + 1px),
      0 0
    );
    border-radius: var(--radius-small);
  }
  .item::before {
    content: "";
    width: var(--space-80);
    height: var(--space-80);
    position: absolute;
    top: 0;
    right: 0;
    background-color: hsl(var(--b) 75%);
    border-bottom-left-radius: var(--radius-small);
    box-shadow: 1rem 1rem 0 rgba(0 0 0 / 0.04);
  }

  .years {
    margin-bottom: var(--space-16);
  }

  .role {
    font-weight: var(--font-bold);
    margin-bottom: var(--space-8);
    font-size: var(--font-large);
    line-height: var(--line-snugish);
  }

  .title {
    font-size: var(--font-base);
    font-weight: var(--font-normal);
    line-height: var(--line-normal);
    letter-spacing: 0;
    font-style: italic;
    margin-bottom: var(--space-24);
  }

  .description {
    font-size: 1.6rem;
    line-height: 1.7;
  }

  .link {
    margin-top: var(--space-24);
    font-size: 1.6rem;
    display: grid;
    grid-template-columns: min-content 1fr;
    column-gap: 1.5ex;
    line-height: var(--line-snug);
    margin-bottom: var(--space-12);
    color: hsl(var(--b) 20%);
  }

  .link__icon-container {
    align-self: center;
    grid-row: 1 / 3;
    height: 5.2ex;
    width: 5.2ex;
    padding: 0.5ex;
    background-color: hsl(var(--b) 75%);
    border-radius: var(--radius-xs);
  }

  .link span {
    grid-column: 2 / 3;
    display: block;
    padding: 0;
  }

  .link span:first-of-type {
    text-transform: uppercase;
    font-size: var(--font-xs);
    letter-spacing: 1px;
    align-self: end;
  }
  .link span:last-of-type {
    align-self: start;
  }
</style>
