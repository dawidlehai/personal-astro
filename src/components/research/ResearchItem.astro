---
import type { CollectionEntry } from "astro:content";
import { ArrowCircleRight } from "phosphor-react";

interface Props {
  item: CollectionEntry<"research">;
}

const {
  item,
  item: {
    id,
    data: { years, title, role, link },
  },
} = Astro.props;

const { Content } = await item.render();

const lang = id.split("/")[0];
---

<li class="item">
  <p class="years">
    <time class="from" datetime={years.from}>{years.from}</time>
    {
      years.from !== years.to && (
        <>
          â€“
          <time class="to" datetime={years.to}>
            {years.to}
          </time>
        </>
      )
    }
  </p>

  <hgroup class="heading">
    <p class="role">{role}</p>

    <h3 class="title" {...(title.lang !== lang && {lang: title.lang})}>
      {title.content}
    </h3>
  </hgroup>

  <div class="description">
    <Content class="test" />
  </div>

  {
    link && (
      <div class="link">
        <a
          class="goto"
          href={link.url}
          {...(link.hreflang !== lang && { lang: link.hreflang })}>
          {link.text}
          <ArrowCircleRight size="3.6ex" weight="fill" />
        </a>
      </div>
    )
  }
</li>

<style>
  .item {
    flex: 1 1 auto;
    padding: var(--space-32);
    padding-bottom: var(--space-8);
    background-color: var(--a-darker);
    position: relative;
    overflow: hidden;
    clip-path: polygon(
      calc(100% - var(--space-64)) 0,
      100% calc(var(--space-64)),
      100% calc(100% + 1px),
      0 calc(100% + 1px),
      0 0
    );
    border-radius: var(--radius-small);
    color: var(--white-a);
  }
  .item::before {
    content: "";
    width: var(--space-64);
    height: var(--space-64);
    position: absolute;
    top: 0;
    right: 0;
    background-color: var(--b-full);
    border-bottom-left-radius: var(--radius-small);
    box-shadow: 0.8rem 0.8rem 0 rgba(0 0 0 / 0.04);
  }

  .years {
    margin-bottom: var(--space-16);
    font-weight: 700;
    display: flex;
    gap: var(--space-2);
    color: var(--b-full);
  }

  .role {
    font-weight: var(--font-bold);
    margin-bottom: var(--space-8);
    font-size: var(--font-base);
    line-height: var(--line-snugish);
  }

  .title {
    font-size: var(--font-normal);
    font-weight: var(--font-normal);
    line-height: var(--line-normal);
    letter-spacing: 0;
    margin-bottom: var(--space-24);
    color: var(--b-full);
  }

  .description {
    font-size: var(--font-small);
    line-height: 1.7;
  }

  .link {
    display: grid;
    padding-bottom: var(--space-24);
  }

  .goto:where(:link, :visited) {
    display: flex;
    align-items: center;
    gap: var(--space-8);
    font-size: var(--font-small);
    font-weight: 800;
    text-transform: uppercase;
    color: var(--white-a);
    justify-self: end;
  }
</style>
