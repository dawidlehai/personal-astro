---
import type { Project } from "../../utils/types";

interface Props {
  project: Project;
  isEn: boolean;
}

const {
  project: { title, subtitle, type, image, technologies, link },
  isEn,
} = Astro.props;

interface ProjectType {
  text: string;
  color: string;
}

let projectType: Partial<ProjectType> = {};

const commercialText = isEn ? "Commercial project" : "Projekt komercyjny";
const personalText = isEn ? "Personal project" : "Projekt w≈Çasny";
const courseText = isEn ? "Course project" : "Projekt w ramach kursu";

if (type === "commercial")
  projectType = {
    text: commercialText,
    color: "var(--gray-12)",
  } as ProjectType;

if (type === "personal")
  projectType = {
    text: personalText,
    color: "var(--gray-13)",
  } as ProjectType;

if (type === "course")
  projectType = {
    text: courseText,
    color: "var(--gray-14)",
  } as ProjectType;
---

<li class="project">
  <hgroup>
    <span>{projectType.text}</span>
    <h4>{title}</h4>
    <p>{subtitle}</p>
  </hgroup>
  <div class="project__figure">
    <div class="tablet">
      <div class="tablet__screen">
        <img src={image.full} class="project__img" />
      </div>
    </div>
    <ul class="tech">
      {
        technologies.map((tech) => (
          <li style={{ backgroundColor: tech.bg, color: tech.color }}>
            <tech.icon
              size="var(--icon-size)"
              className="tech__icon"
              title={tech.name}
            />
            {tech.name}
          </li>
        ))
      }
    </ul>
    <div class="phone">
      <div class="phone__speaker"></div>
      <div class="phone__screen">
        <img src={image.mobile} class="project__img-mobile" />
      </div>
      <div class="phone__button"></div>
    </div>
  </div>
  <a href={link.url} hreflang={link.lang} class="button"
    ><link.icon.icon
      size="var(--icon-size)"
      className="button__icon"
      title={link.icon.name}
    />{link.text}</a
  >
</li>

<style>
  .project {
    grid-column: span 6;
    display: grid;
    grid-template-columns: 1fr;
  }

  .project hgroup p {
    margin-bottom: var(--space-16);
    font-style: italic;
  }

  .project hgroup span {
    font-size: var(--font-small);
    text-transform: uppercase;
    padding: 0.8ex 1.1ex;
    background-color: ;
  }

  .project__figure {
    display: grid;
    grid-template-columns: repeat(7, 1fr);
    grid-template-rows: min-content 1fr;
    --bg-color: var(--gray-14);
  }

  .phone {
    grid-column: 6 / 8;
    grid-row: 1 / 3;
    align-self: start;

    background-color: var(--gray-15);

    --border: var(--space-8);
    border: 1px solid var(--gray-11);
    border-right: 4px solid var(--gray-11);
    border-bottom: 4px solid var(--gray-11);
    border-radius: var(--radius-xxl);
    padding: var(--border);
    margin-top: var(--space-64);
  }

  .phone__screen {
    overflow: hidden;
    border-radius: calc(var(--radius-xxl) - var(--border));
  }

  .project__img-mobile {
    width: 100%;
  }

  .tablet__screen {
    border-radius: var(--radius-default);
    overflow: hidden;
  }

  .tablet {
    grid-column: 1 / 7;
    grid-row: 1 / 2;
  }

  .project__img {
    width: 100%;
  }

  .tech {
    --icon-size: 2.5ex;
    align-self: start;
    grid-column: 1 / 6;
    display: flex;
    flex-wrap: wrap;
    gap: var(--space-8);
    margin-top: var(--space-16);
  }

  .tech li {
    border-radius: var(--radius-small);
    display: flex;
    justify-content: center;
    font-size: var(--font-small);
    align-items: center;
    gap: var(--space-8);
    font-family: var(--font-sans);
    padding: 1ex 1.4ex;
    font-weight: var(--font-medium);
  }

  .tech__icon {
    color: currentColor;
  }

  .button {
    background-color: var(--gray-12);
    justify-self: start;
  }
</style>
