---
import { GitHub } from "../../utils/technologies.astro";

import type { Project } from "../../utils/types";

interface Props {
  project: Project;
  isEn: boolean;
  side?: string;
}

const {
  project: {
    title,
    subtitle,
    type,
    description,
    image,
    technologies,
    link,
    source,
  },
  isEn,
  side = "left",
} = Astro.props;

const figurePlace = side === "left" ? "2 / 3" : "1 / 2";
const textPlace = side === "left" ? "1 / 2" : "2 / 3";

interface ProjectType {
  text: string;
  color: string;
  bg: string;
}

let projectType: Partial<ProjectType> = {};

const commercialText = isEn ? "Commercial project" : "Projekt komercyjny";
const personalText = isEn ? "Personal project" : "Projekt własny";
const courseText = isEn ? "Course project" : "Projekt w ramach kursu";
const sourceText = isEn ? "Source code" : "Kod źródłowy";
const visitText = isEn ? "Visit website" : "Odwiedź stronę";

if (type === "commercial")
  projectType = {
    text: commercialText,
    color: "var(--gray-3)",
    bg: "var(--gray-14)",
  } as ProjectType;

if (type === "personal")
  projectType = {
    text: personalText,
    color: "var(--gray-4)",
    bg: "var(--gray-13)",
  } as ProjectType;

if (type === "course")
  projectType = {
    text: courseText,
    color: "var(--gray-5)",
    bg: "var(--gray-12)",
  } as ProjectType;
---

<li class="project">
  <div class="description">
    <p
      class="project__type"
      style={{ backgroundColor: projectType.bg, color: projectType.color }}>
      {projectType.text}
    </p>
    <hgroup>
      <h4>{title}</h4>
      <p>{subtitle}</p>
    </hgroup>
    <p class="description-text">{description}</p>
    <div class="buttons">
      <a
        href={link.url}
        hreflang={link.lang}
        class="button"
        style={{ backgroundColor: link.icon.bg, color: link.icon.color }}
        ><link.icon.icon
          size="var(--icon-size)"
          className="button__icon"
          title={link.icon.name}
        />{visitText}</a
      >
      <a
        href={source}
        class="button"
        style={{ backgroundColor: GitHub.bg, color: GitHub.color }}
        ><GitHub.icon
          size="var(--icon-size)"
          className="button__icon"
          title="GitHub"
        />{sourceText}</a
      >
    </div>
  </div>
  <div class="project__figure">
    <div class="tablet">
      <div class="tablet__screen">
        <img src={image.full} class="project__img" />
      </div>
    </div>
    <ul class="tech">
      {
        technologies.map((tech) => (
          <li style={{ backgroundColor: tech.bg, color: tech.color }}>
            <tech.icon
              size="var(--icon-size)"
              className="tech__icon"
              title={tech.name}
            />
            {tech.name}
          </li>
        ))
      }
    </ul>
    <div class="phone">
      <div class="phone__speaker"></div>
      <div class="phone__screen">
        <img src={image.mobile} class="project__img-mobile" />
      </div>
      <div class="phone__button"></div>
    </div>
  </div>
</li>

<style define:vars={{ figurePlace, textPlace }}>
  .project {
    grid-column: span 12;
    display: grid;
    grid-template-columns: repeat(2, 1fr);
  }

  .project hgroup h4 {
    font-size: var(--font-3);
  }

  .project hgroup p {
    margin-bottom: var(--space-16);
    font-style: italic;
    font-size: var(--font-4);
  }

  .description-text {
    font-size: var(--font-large);
  }

  .project__type {
    font-size: var(--font-small);
    display: inline-block;
    padding: 0.8ex 1.1ex;
    border-radius: var(--radius-small);
    font-family: var(--font-sans);
    font-weight: var(--font-medium);
    margin-bottom: var(--space-16);
  }

  .project__figure {
    grid-column: var(--figurePlace);
    grid-row: 1 / 2;
    display: grid;
    grid-template-columns: repeat(14, 1fr);
    grid-template-rows: min-content 1fr;
  }

  .phone {
    grid-column: 11 / 15;
    grid-row: 1 / -1;
    align-self: start;

    background-color: var(--gray-15);

    --border: var(--space-8);
    border: 1px solid var(--gray-11);
    border-right: 4px solid var(--gray-11);
    border-bottom: 4px solid var(--gray-11);
    border-radius: var(--radius-xxl);
    padding: var(--border);
    margin-top: var(--space-64);
  }

  .phone__screen {
    overflow: hidden;
    border-radius: calc(var(--radius-xxl) - var(--border));
  }

  .project__img-mobile {
    width: 100%;
  }

  .tablet__screen {
    border-radius: var(--radius-default);
    overflow: hidden;
  }

  .tablet {
    grid-column: 1 / 13;
    grid-row: 1 / 2;
  }

  .project__img {
    width: 100%;
  }

  .tech {
    --icon-size: 2.5ex;
    align-self: start;
    grid-column: 1 / 11;
    grid-row: 2 / 3;
    display: flex;
    flex-wrap: wrap;
    gap: var(--space-8);
    margin-top: var(--space-16);
  }

  .tech li {
    border-radius: var(--radius-xs);
    display: flex;
    justify-content: center;
    font-size: var(--font-small);
    align-items: center;
    gap: var(--space-8);
    font-family: var(--font-sans);
    padding: 1ex 1.4ex;
    font-weight: var(--font-medium);
  }

  .tech__icon {
    color: currentColor;
  }

  .description {
    grid-column: var(--textPlace);
    padding: var(--space-32);
  }

  .bg {
    grid-column: 2 / 13;
    grid-row: 3 / -1;
    background: linear-gradient(
      to top left,
      transparent,
      var(--gray-14),
      transparent
    );
    border-bottom-right-radius: var(--radius-small);
    border-bottom-left-radius: var(--radius-small);
    z-index: -1;
  }

  .buttons {
    grid-column: 1 / 2;
    margin-top: var(--space-16);
    display: flex;
    justify-content: start;
    align-items: center;
    gap: var(--space-12);
  }

  .button {
    background-color: var(--gray-13);
    justify-self: start;
    font-family: var(--font-sans);
    font-weight: var(--font-medium);
  }
</style>
