---
import { GitHub } from "../../utils/technologies.astro";

import type { Project } from "../../data/projects";
import CourseInfo from "./CourseInfo.astro";

interface Props {
  project: Project;
  isEn: boolean;
}

const {
  project: {
    title,
    subtitle,
    type,
    description,
    image,
    technologies,
    link,
    source,
    size,
    mobile,
    course,
  },
  isEn,
} = Astro.props;

interface ProjectType {
  text: string;
  color: string;
  bg: string;
}

let projectType: Partial<ProjectType> = {};

const commercialText = isEn ? "Commercial project" : "Projekt komercyjny";
const personalText = isEn ? "Personal project" : "Projekt personalny";
const courseText = isEn ? "Course project" : "Projekt w ramach kursu";
const sourceText = isEn ? "Source code" : "Kod źródłowy";
const visitText = isEn ? "Visit website" : "Odwiedź stronę";

if (type === "commercial")
  projectType = {
    text: commercialText,
    color: "var(--gray-3)",
    bg: "var(--gray-12)",
  } as ProjectType;

if (type === "personal")
  projectType = {
    text: personalText,
    color: "var(--gray-4)",
    bg: "var(--gray-12)",
  } as ProjectType;

if (type === "course")
  projectType = {
    text: courseText,
    color: "var(--gray-5)",
    bg: "var(--gray-12)",
  } as ProjectType;

const isMedium = size === "medium";
const isSmall = size === "small";
---

<li
  class:list={[
    "project",
    { "project--medium": isMedium },
    { "project--small": isSmall },
  ]}>
  <div class="description">
    <hgroup>
      <p class="project__type" style={{ color: projectType.color }}>
        {projectType.text}
      </p>
      <h4 class="title">{title}</h4>
      <p class="subtitle">
        {subtitle}
      </p>
    </hgroup>
    <p>{description}</p>
    {type === "course" && <CourseInfo isEn={isEn} course={course!} />}
  </div>
  <div class="bg"></div>
  <div class="buttons">
    <a
      href={link.url}
      hreflang={link.lang}
      class="button"
      style={{ backgroundColor: link.icon.bg, color: link.icon.color }}
      ><link.icon.icon
        size="var(--icon-size)"
        className="button__icon"
        title={link.icon.name}
      />{visitText}</a
    >
    <a
      href={source}
      class="button"
      style={{ backgroundColor: GitHub.bg, color: GitHub.color }}
      ><GitHub.icon
        size="var(--icon-size)"
        className="button__icon"
        title="GitHub"
      />{sourceText}</a
    >
  </div>
  <div class="tablet">
    <div class="tablet__screen">
      <img src={image.full} class="project__img" />
    </div>
  </div>
  <ul class="tech">
    {
      technologies.map((tech) => (
        <li style={{ backgroundColor: tech.bg, color: tech.color }}>
          <tech.icon
            size="var(--icon-size)"
            className="tech__icon"
            title={tech.name}
          />
          {tech.name}
        </li>
      ))
    }
  </ul>
  {
    mobile && (
      <div class="phone">
        <div class="phone__speaker" />
        <div class="phone__screen">
          <img src={image.mobile} class="project__img-mobile" />
        </div>
        <div class="phone__button" />
      </div>
    )
  }
</li>

<style>
  .project {
    grid-column: span 6;
    display: grid;
    grid-template-columns: repeat(14, 1fr);
    grid-template-rows: min-content min-content min-content 1fr;
  }
  .project--medium {
    grid-column: span 4;
  }
  .project--small {
    grid-column: span 3;
  }

  .project--medium .title,
  .project--small .title {
    font-size: var(--font-5);
  }

  .subtitle {
    margin-bottom: var(--space-16);
    font-size: var(--font-large);
    font-style: italic;
  }
  .project--medium .subtitle,
  .project--small .subtitle {
    font-size: var(--font-base);
  }

  .project__type {
    font-size: var(--font-small);
    display: inline-block;
    text-transform: uppercase;
    margin-bottom: var(--space-8);
  }
  .project--medium .project__type,
  .project--small .project__type {
    font-size: var(--font-xs);
  }

  .phone {
    grid-column: 11 / 15;
    grid-row: 1 / -1;
    align-self: start;

    background-color: var(--gray-15);

    --border: var(--space-8);
    border: 1px solid var(--gray-11);
    --phone-radius: var(--radius-xxl);
    border-radius: var(--phone-radius);
    padding: var(--border);
    margin-top: var(--space-64);
    box-shadow: var(--shadow-default);
  }
  .project--medium .phone {
    --phone-radius: var(--radius-default);
    --border: var(--space-4);
  }
  .project--small .phone {
    display: none;
  }

  .phone__screen {
    overflow: hidden;
    border-radius: calc(var(--phone-radius) - var(--border));
  }

  .project__img-mobile {
    width: 100%;
    aspect-ratio: 1/2;
  }

  .tablet__screen {
    border-radius: var(--radius-default);
    overflow: hidden;
  }

  .tablet {
    grid-column: 1 / 14;
    grid-row: 1 / 2;
  }
  .project--small .tablet {
    grid-column: 1 / -1;
  }

  .project__img {
    width: 100%;
    aspect-ratio: 16/9;
  }

  .tech {
    --icon-size: 2.5ex;
    align-self: start;
    grid-column: 1 / 11;
    grid-row: 2 / 3;
    display: flex;
    flex-wrap: wrap;
    gap: var(--space-8);
    margin-top: var(--space-16);
  }
  .project--medium .tech {
    margin-top: var(--space-12);
  }
  .project--small .tech {
    grid-column: 1 / -1;
    gap: var(--space-4);
    margin-top: var(--space-12);
  }

  .tech li {
    border-radius: var(--radius-xs);
    display: flex;
    justify-content: center;
    font-size: var(--font-small);
    align-items: center;
    gap: var(--space-8);
    font-family: var(--font-sans);
    padding: 1ex 1.4ex;
    font-weight: var(--font-medium);
  }
  .project--small .tech li {
    font-size: var(--font-xs);
  }

  .tech__icon {
    color: currentColor;
  }

  .description {
    grid-column: 2 / 13;
    grid-row: 3 / 4;
    padding: var(--space-32);
  }
  .project--small .description {
    grid-column: 1 / -1;
    padding: var(--space-24) 0;
  }

  .bg {
    grid-column: 2 / 13;
    grid-row: 2 / -1;
    background: linear-gradient(
      to top left,
      transparent,
      var(--gray-14),
      transparent
    );
    border-bottom-right-radius: var(--radius-small);
    border-bottom-left-radius: var(--radius-small);
    z-index: -1;
  }
  .project--small .bg {
    grid-row: 1 / -1;
    grid-column: 1 / -1;
    border-top-right-radius: var(--radius-xxl);
    border-top-left-radius: var(--radius-xxl);
    background: linear-gradient(
      to top left,
      transparent 5%,
      var(--gray-14),
      transparent 50%
    );
  }

  .buttons {
    grid-column: 2 / 13;
    margin-top: var(--space-16);
    display: flex;
    justify-content: start;
    align-items: center;
    gap: var(--space-8);
  }
  .project--small .buttons {
    grid-column: 1 / -1;
  }

  .button {
    background-color: var(--gray-13);
    justify-self: start;
    font-family: var(--font-sans);
    font-weight: var(--font-medium);
    font-size: var(--font-small);
  }
</style>
